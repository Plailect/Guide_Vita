---
title: "Форматирование накопителя (Linux)"
---

{% include toc title="Содержание" %}

### Обязательно к прочтению

Этот дополнительный раздел содержит информацию о форматировании накопителя для использования с плагином StorageMgr.

Кроме того, есть опциональный раздел для проверки накопителя на ошибки с помощью F3. В зависимости от размера накопителя и скорости компьютера процесс проверки может занять до нескольких часов!

Этот раздел предназначен только для пользователей Linux. Если у вас не Linux, воспользуйтесь [Форматирование накопителя (Windows)](storage-format-(windows)) или [Форматирование накопителя (Mac)](storage-format-(mac)).

### Что понадобится

* Свежая версия [exfat-utils](https://github.com/relan/exfat) для вашего дистрибутива (используйте свой менеджер пакетов)
* Свежая версия [fuse-exfat](https://github.com/relan/exfat) для вашего дистрибутива (используйте свой менеджер пакетов)
* Свежая версия [F3](https://github.com/AltraMayor/f3/releases/latest)
  + Это не требуется, если вы не хотите проверять накопитель на наличие ошибок

### Инструкция

#### Section I - Formatting Storage Device

1. Insert your storage device into your computer
1. Unmount your storage device with `umount`
1. Run `sudo dd if=/dev/zero of=/dev/sdX` to wipe the storage device
  + `sdX` should be the device corresponding to your storage device
1. Remove your storage device from your computer
1. Re-insert your storage device into your computer
1. Run `mkfs.exfat /dev/sdX` to format your storage device as exFAT
  + If your storage device has a capacity of 256 GB or greater, you must format with a cluster size of 64 KB

#### Section II - Verifying Storage Device

If you do not want to check your storage device for errors, skip this section.
{: .notice--info}

1. Unzip the f3 `.zip` file
1. `cd` into the f3 directory
1. Run `make` to compile F3
1. Insert your storage device into your computer
1. Mount your storage device
1. Run `./f3write <your storage device mount point>`
1. Wait until the process is complete. See below for an example output.

~~~ bash
$ ./f3write /media/michel/6135-3363/
Free space: 29.71 GB
Creating file 1.h2w ... OK!
...
Creating file 30.h2w ... OK!
Free space: 0.00 Byte
Average Writing speed: 4.90 MB/s
~~~

1. Run `./f3read <your storage device mount point>`
1. Wait until the process is complete. See below for an example output.

~~~ bash
$ ./f3read /media/michel/6135-3363/
									SECTORS      ok/corrupted/changed/overwritten
Validating file 1.h2w ... 2097152/        0/      0/      0
...
Validating file 30.h2w ... 1491904/        0/      0/      0

	Data OK: 29.71 GB (62309312 sectors)
Data LOST: 0.00 Byte (0 sectors)
					Corrupted: 0.00 Byte (0 sectors)
	Slightly changed: 0.00 Byte (0 sectors)
				Overwritten: 0.00 Byte (0 sectors)
Average Reading speed: 9.42 MB/s
~~~

If the test shows the result `Data LOST: 0.00 Byte (0 sectors)` your storage device is good and you can delete all `.h2w` files on your storage device
{: .notice--success}

If the test shows any other results, your storage device may be corrupted or damaged and you may have to replace it!
{: .notice--danger}

___

### Вернитесь к [Началу](get-started)
{: .notice--primary}
